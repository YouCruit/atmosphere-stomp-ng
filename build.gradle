buildscript {
    ext.kotlin_version = '1.2.61'
    dependencies {
        classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:5.1.0"
        classpath "com.netflix.nebula:gradle-lint-plugin:9.3.2"
        classpath "gradle.plugin.org.jmailen.gradle:kotlinter-gradle:1.15.1"
        classpath "org.ajoberstar:gradle-git:1.7.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
        classpath "org.eclipse.jgit:org.eclipse.jgit:4.4.1.201607150455-r"
        classpath "net.researchgate:gradle-release:2.6.0"
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://dl.bintray.com/jetbrains/spek/" }
    }
}

apply plugin: 'base'
apply plugin: 'nebula.lint'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'idea'
apply plugin: 'maven-publish'

apply from: "${project.rootDir}/release.gradle"
apply from: "${project.rootDir}/kotlin.gradle"


repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

group 'com.youcruit'
description = """
                Differs from the original implementation in that it supports wildcards, supports rejecting SUBSCRIBEs and
                SENDs. The latter two are supported through hitting endpoints which may deny or pass the message through 
            """.stripMargin()


idea {
    module {
        name = "Atmosphere Stomp NG"
        outputDir = file('build/idea-out')
        testOutputDir = file('build/idea-testout')
        downloadSources = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'atmosphere-stomp-ng'
            from components.java
            artifact tasks.sourceJar
            artifact tasks.javadocJar
        }
    }
}

dependencyUpdates {
    revision = 'release'
}

gradleLint {
    criticalRules = ['all-dependency', 'duplicate-dependency-class']
    rules = ['archaic-wrapper']
    excludedRules = ['undeclared-dependency']
    autoLintAfterFailure = false
    alwaysRun = false
}


dependencies {
    implementation "org.atmosphere:atmosphere-runtime:${atmosphere_version}"

    implementation "javax.servlet:javax.servlet-api:3.1.0"
    api "org.slf4j:slf4j-api:$slf4j_version"

    testCompile "org.testng:testng:6.8.8"
    testCompile "org.mockito:mockito-all:1.8.5"
    testCompile "org.slf4j:slf4j-simple:$slf4j_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}